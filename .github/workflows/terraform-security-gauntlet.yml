name: 'Terraform Security Gauntlet'

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  lint-and-validate:
    name: 'Validate and Lint'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.7'

      - name: 'Terraform Init'
        working-directory: terraform/aws
        run: terraform init -backend=false -input=false

      - name: 'Terraform Validate'
        working-directory: terraform/aws
        run: terraform validate || true

      - name: 'Set up TFLint'
        uses: terraform-linters/setup-tflint@v4

      - name: 'Initialize TFLint'
        working-directory: terraform/aws
        run: tflint --init

      - name: 'Run TFLint'
        working-directory: terraform/aws
        run: tflint --format compact || true

  sast-scan:
    name: 'SAST Scanning'
    runs-on: ubuntu-latest
    needs: lint-and-validate
    strategy:
      fail-fast: false
      matrix:
        scanner: [trivy, checkov]
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Run Trivy Scan'
        if: ${{ matrix.scanner == 'trivy' }}
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'config'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          exit-code: '0'

      - name: 'Run Checkov Scan'
        if: ${{ matrix.scanner == 'checkov' }}
        uses: bridgecrewio/checkov-action@v12
        with:
          framework: terraform
          soft_fail: true
          output_format: sarif
          output_file_path: 'checkov-results.sarif'

      - name: 'Upload ${{ matrix.scanner }} SARIF'
        uses: actions/upload-artifact@v4
        with:
          name: sarif-reports
          path: '*.sarif'

  policy-check:
    name: 'OPA Policy Check'
    runs-on: ubuntu-latest
    needs: lint-and-validate
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.7'

      - name: 'Terraform Init/Plan'
        working-directory: terraform/aws
        env:
          TF_IN_AUTOMATION: 1
        run: |
          terraform init -backend=false -input=false -reconfigure || true
          terraform plan -refresh=false -input=false -out=tfplan.binary || true
          terraform show -json tfplan.binary > tfplan.json || echo '{}' > tfplan.json

      - name: 'Set up OPA'
        uses: open-policy-agent/setup-opa@v2

      - name: 'Run OPA evaluation'
        run: |
          if [ -d policy ]; then
            opa eval --format=json --data policy --input terraform/aws/tfplan.json 'data.terraform.deny' || true
          else
            echo "policy/ directory not found; skipping OPA evaluation"
          fi

  upload-results:
    name: 'Upload Security Results'
    runs-on: ubuntu-latest
    needs: sast-scan
    steps:
      - name: 'Download all SARIF reports'
        uses: actions/download-artifact@v4
        with:
          name: sarif-reports

      - name: 'Upload SARIF to GitHub Security'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: '.'
