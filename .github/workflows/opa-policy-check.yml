name: 'OPA Policy Check'

on:
  workflow_dispatch:
    inputs:
      terraform_path:
        description: 'Path to scan (relative)'
        required: true
        default: 'terraform/aws'

jobs:
  opa-check:
    name: 'Run OPA Policy Check'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: 'Terraform Init'
        run: terraform init
        # Add environment variables for cloud provider credentials if needed for the plan
        # env:
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 'Terraform Plan'
        run: |
          # Run plan but never fail the workflow if plan can't complete (no creds etc.)
          terraform plan -out=tfplan.binary || true

      - name: 'Convert plan to JSON'
        run: |
          # Convert plan to JSON if possible; if not, create an empty JSON to let OPA run harmlessly
          if [ -f tfplan.binary ]; then
            terraform show -json tfplan.binary > tfplan.json || echo '{}' > tfplan.json
          else
            echo '{}' > tfplan.json
          fi

      - name: 'Set up OPA'
        uses: open-policy-agent/setup-opa@v2
        with:
          version: latest

      - name: 'Run OPA evaluation (non-failing)'
        run: |
          # Evaluate policies but do not fail the workflow. Print any violations if present.
          results=$(opa eval --data policy/ --input tfplan.json 'data.terraform.deny') || true

          if [ -n "$results" ]; then
            echo "OPA Policy Violations Found:"
            echo "$results"
          else
            echo "OPA policies passed or no data to evaluate."
          fi
