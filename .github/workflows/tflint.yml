name: 'Terraform Linting'

on:
  workflow_dispatch:
    inputs:
      terraform_path:
        description: 'Path to scan (relative)'
        required: true
        default: 'terraform/aws'


jobs:
  tflint:
    name: 'Run TFLint'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Cache TFLint plugin directory'
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tflint-

      - name: 'Set up TFLint'
        uses: terraform-linters/setup-tflint@v5
        id: setup_tflint
        with:
          tflint_version: v0.52.0
          # enable wrapper so we can read stdout/stderr/exitcode from the action
          tflint_wrapper: true

      - name: 'Initialize TFLint'
        run: tflint --init
        env:
          # Use secrets.GITHUB_TOKEN to avoid rate-limiting when downloading plugins
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # JSON-based parsing removed. Using compact format with problem matchers below.

      # Optional alternatives (commented out):
      # 1) Step-level continue-on-error (never fail the job):
      # - name: 'Run TFLint scan (continue-on-error)'
      #   run: tflint --format compact
      #   continue-on-error: true

      # 2) Capture outputs with wrapper and decide later (advanced):
      # - name: 'Run TFLint scan (capture outputs)'
      #   id: tflint
      #   run: tflint --format compact || true
      - name: 'Run TFLint (compact)'
        id: tflint
        run: |
          TARGET_PATH=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.terraform_path || 'terraform/aws' }}
          echo "Scanning path: $TARGET_PATH"
          # Run tflint compact and save output. No problem-matchers are used.
          tflint --format compact "$TARGET_PATH" | tee tflint.out

      - name: 'Show sample of TFLint output for debugging'
        if: always()
        run: |
          echo "--- TFLint output (first 50 lines) ---"
          head -n 50 tflint.out || true
          echo "--- End TFLint output ---"