name: 'Trivy IaC Scan'

on:
  workflow_dispatch:
    inputs:
      terraform_path:
        description: 'Path to the Terraform files to scan'
        required: true
        default: 'terraform/'

permissions:
  contents: read
  security-events: write

jobs:
  trivy-scan:
    name: 'Run Trivy Scan'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Run Trivy vulnerability scanner in IaC mode'
        uses: aquasecurity/trivy-action@0.28.0
        with:
          version: 'v0.65.0'
          scan-type: 'config'
          scan-ref: '${{ github.event.inputs.terraform_path }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

    # Example: enforcement step (commented out). Uncomment to fail build on High/Critical findings
    # - name: Fail build on High/Criticial Vulnerabilities
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     scan-type: "fs"
    #     format: table
    #     scan-ref: .
    #     severity: HIGH,CRITICAL
    #     ignore-unfixed: true
    #     exit-code: 1
    #     # On a subsequent call to the action we know trivy is already installed so can skip this
    #     skip-setup-trivy: true

      - name: 'Upload Trivy scan results to GitHub Security tab'
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ always() }}
        with:
          sarif_file: 'trivy-results.sarif'
      - name: 'Upload Trivy SARIF as artifact'
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: trivy-results
          path: trivy-results.sarif
